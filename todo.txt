
1, write a new function to allocate that map you calculated!
	that y you counted is the number of char pointers you need to have!

0, if file is empty
(so basically you fill in the map until now!)

2, check if it's rectangle!

3, 

______ current probelm

i want to read from a file a map 

and i just want to read everything at this point
	=> let's just do this first and then check that we have no leaks


__________________________ more checks 
check if you have at least one player , one collectable, one exit!
check if you have more than one player and one exit


_____________________________
1, count how many items you have of each of them things!
	if 1 < players || 1 < exits
		exit 
	if (P == 0 || C == 0 || E == 0)
		exit

_____________________________

rida's advice
	-> understand and implement dynamic array
	(cause you'll need it future projects!)
	-> if not
		use recursion but limit the map! 


_____________________ checklist

+ make a copy of that map
+ find the player
+ flood fill that map, unless: 
	you exit the map or
	you come across 1 or X or E

	-> every column you come across in flood fill 
		turn it into X!
(in this flood fill checek for both the C and E)
flood fill everything but E first and check if you find any C:
	then not valid!
flood fill again E included and check if you still have an E:
	if so, then not valid!

____________________________
+ check if the path is valid, by checking if flood if successfully filled 
	everything on the map but the walls!
	so we check if we can find a collectible and an exit!

have a flood fill function that has a char to look for other than 1 and X, so:
	either E or C!
have another one that's called look for that takes in either E or C